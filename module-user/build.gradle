//根据isModule开关进行动态切换组件模式和集成模式
if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

//赋值与引用，def 类型 相当于java中的Object类型，如config是一个map集合对象
def config = rootProject.ext.android
def appId = rootProject.ext.appId
def dep = rootProject.ext.dependencies


android {
    compileSdkVersion config.compileSdkVersion //map集合取值方式一
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (!isModule) {//组件模式下
            applicationId appId["module-user"]//map集合取值方式二
        }

        //资源配置
        sourceSets {
            main {
                if (!isModule) {
                    //组件模式下使用指定的manifest文件
                    manifest.srcFile 'src/main/module/AndroidManifest.xml'
                    java.srcDirs 'src/main/module/java'
                } else {
                    java.srcDirs 'src/main/java'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile dep["appcompat-v7"]
    testCompile dep["junit"]
    compile project(':module-common')
}
